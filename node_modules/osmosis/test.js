'use strict';

function Osmosis() {
  if (calledWithNew) {
    return Osmosis().stop();
  }

  this.next = [];
  this.config = {};

  var proto = Object.create(Osmosis, {
    next: {
      value: [],
    },
    config: {
      value: {}
    }
  });

  var next = Osmosis.bind(proto);
  next.

  this.next.push(next);

  return next;
}

Osmosis.handlers = [];

Osmosis.require = function (name) {
  if (typeof name === 'object') {
    return extend(name);
  }

  var module = require(str);

  if (typeof module === 'function') {

  } else {
    Object.keys(module).forEach(function (key) {
      osmosis.prototype[key] = module[key];
    });
  }
}

Osmosis.extend = function (name, callback) {

}

Osmosis.osmosis = function () {

}

Osmosis.then = function (callback) {
  return Osmosis(function () {
    var ret = callback(args);

    if (ret instanceof Function) {
      ret(next, done);
    }
  });
}

module.exports = Osmosis;